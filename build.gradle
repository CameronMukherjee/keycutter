plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.1"
    id 'io.micronaut.docker' version '3.4.0'
    id 'io.micronaut.graalvm' version '3.4.0'
}

version = "0.2"
group = "com.hexploits.kc"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    implementation('org.apache.commons:commons-lang3:3.12.0')
    implementation("io.micronaut.email:micronaut-email:1.2.1")
    implementation("io.micronaut.email:micronaut-email-amazon-ses:1.2.1")
    implementation('org.springframework.security:spring-security-crypto:5.6.3')
    implementation('commons-logging:commons-logging:1.2')
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation('org.hibernate:hibernate-validator:7.0.4.Final')
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("org.slf4j:slf4j-simple")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")

}


application {
    mainClass.set("com.hexploits.kc.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
//    runtime("jetty")
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.hexploits.kc.*")
    }
}


