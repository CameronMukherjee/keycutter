package com.hexploits.kc.repository;

import com.hexploits.kc.model.KcUser;
import io.micronaut.data.annotation.Query;
import io.micronaut.data.jdbc.annotation.JdbcRepository;
import io.micronaut.data.model.query.builder.sql.Dialect;
import io.micronaut.data.repository.CrudRepository;
import java.util.Optional;
import java.util.UUID;

@JdbcRepository(dialect = Dialect.POSTGRES)
public interface KcUserRepository extends CrudRepository<KcUser, UUID> {

  Optional<KcUser> findByUsername(String username);

  @Query("UPDATE kc_user SET is_disabled = true, updated_at = now() WHERE username = :username")
  void disableAccount(String username);

  @Query("UPDATE kc_user SET is_disabled = false, updated_at = now() WHERE username = :username")
  void enableAccount(String username);

  @Query("UPDATE kc_user SET password = :password, updated_at = now() WHERE username = :username")
  void updatePassword(String username, String password);

  @Query("DELETE FROM kc_user WHERE username = :username")
  void deleteUser(String username);

  @Query("UPDATE kc_user SET external_reference = :externalReference, username = :username, password = :password, updated_at = now() WHERE uid = :uid")
  void updateUser(UUID uid, String externalReference, String username, String password);
}
