package com.hexploits.kc.repository;

import com.hexploits.kc.dto.response.EventType;
import com.hexploits.kc.model.KcEventLog;
import io.micronaut.data.annotation.Query;
import io.micronaut.data.jdbc.annotation.JdbcRepository;
import io.micronaut.data.model.query.builder.sql.Dialect;
import io.micronaut.data.repository.CrudRepository;
import java.util.List;
import java.util.UUID;

@JdbcRepository(dialect = Dialect.POSTGRES)
public interface KcEventLogRepository extends CrudRepository<KcEventLog, UUID> {

  //language=sql
  @Query("INSERT INTO kc_event_log(uid, kc_user_sid, event_type, metadata, system_env) VALUES (:logUid, (SELECT sid from kc_user WHERE uid = :userUid), :eventType::event_type, :metadata, :systemEnv);")
  void writeLog(UUID logUid, UUID userUid, EventType eventType, String metadata, String systemEnv);

  //language=sql
  @Query("SELECT l.uid, u.uid as user_uid, u.username, l.event_type, l.created_at FROM kc_event_log l JOIN kc_user u on u.sid = l.kc_user_sid ORDER BY l.created_at DESC LIMIT :limit")
  List<KcEventLog> fetchLogs(int limit);

  //language=sql
  @Query("SELECT l.uid, u.uid as user_uid, u.username, l.event_type, l.created_at FROM kc_event_log l JOIN kc_user u on u.sid = l.kc_user_sid WHERE u.uid = :userUid ORDER BY l.created_at DESC LIMIT :limit")
  List<KcEventLog> fetchLogs(UUID userUid, int limit);

  //language=sql
  @Query("SELECT l.uid, u.uid as user_uid, u.username, l.event_type, l.created_at FROM kc_event_log l JOIN kc_user u on u.sid = l.kc_user_sid WHERE u.username = :username ORDER BY l.created_at DESC LIMIT :limit")
  List<KcEventLog> fetchLogs(String username, int limit);
}
