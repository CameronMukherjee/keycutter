package com.hexploits.kc.repository;

import com.hexploits.kc.model.KcUserRole;
import io.micronaut.data.annotation.Query;
import io.micronaut.data.jdbc.annotation.JdbcRepository;
import io.micronaut.data.model.query.builder.sql.Dialect;
import io.micronaut.data.repository.CrudRepository;
import java.util.List;
import java.util.UUID;

@JdbcRepository(dialect = Dialect.POSTGRES)
public interface KcUserRoleRepository extends CrudRepository<KcUserRole, UUID> {

  //language=sql
  @Query("SELECT role FROM kc_user_role JOIN kc_user ku on kc_user_role.kc_user_sid = ku.sid WHERE ku.username = :username")
  List<String> fetchRoles(String username);
  
  //language=sql
  @Query("INSERT INTO kc_user_role (uid, kc_user_sid, role) VALUES (:uid, (SELECT sid from kc_user kc WHERE kc.username = :username), :role);")
  void saveRole(UUID uid, String username, String role);

  //language=sql
  @Query("DELETE FROM kc_user_role ur WHERE ur.kc_user_sid = (SELECT sid FROM kc_user WHERE username = :username) AND ur.role = :role")
  void removeRole(String username, String role);

  //language=sql
  @Query("DELETE FROM kc_user_role ur WHERE ur.kc_user_sid = (SELECT sid FROM kc_user WHERE username = :username)")
  void removeAllRoles(String username);
}
