package com.hexploits.kc.repository.analytics;

import com.hexploits.kc.model.KcCount;
import io.micronaut.data.annotation.Query;
import io.micronaut.data.jdbc.annotation.JdbcRepository;
import io.micronaut.data.model.query.builder.sql.Dialect;
import io.micronaut.data.repository.CrudRepository;
import java.time.LocalDate;

@JdbcRepository(dialect = Dialect.POSTGRES)
public interface KcUserRegistrationAnalyticsRepository extends CrudRepository<KcCount, Long> {

  @Query("SELECT * FROM kc_user_registration_count")
  KcCount fetchUserRegistrationCount();

  @Query("SELECT count(*) FROM kc_user WHERE created_at between now() - INTERVAL '24 HOURS' and now()")
  Long fetchRegistrationsToday();

  @Query("SELECT coalesce(count(*), 0) FROM kc_user WHERE created_at::date = :date::date")
  Long fetchUserRegistrationsForDay(LocalDate date);
}
