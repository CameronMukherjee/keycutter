package com.hexploits.kc.controller;

import com.hexploits.kc.service.KcUserRoleService;
import io.micronaut.http.annotation.Controller;
import io.micronaut.http.annotation.Delete;
import io.micronaut.http.annotation.Get;
import io.micronaut.http.annotation.PathVariable;
import io.micronaut.http.annotation.Post;
import io.micronaut.validation.Validated;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import java.util.List;
import javax.annotation.security.PermitAll;

@Validated
@Tag(name = "Role Controller")
@Controller("/user/{username}/role")
public class RoleController {

  private final KcUserRoleService kcUserRoleService;

  public RoleController(KcUserRoleService kcUserRoleService) {
    this.kcUserRoleService = kcUserRoleService;
  }

  @PermitAll
  @Operation(description = "Fetch roles for a given user.")
  @Get("/")
  public List<String> fetchRoles(@PathVariable String username) {
    return kcUserRoleService.fetchRoles(username);
  }

  @PermitAll
  @Operation(description = "Add a role to a user.")
  @Post("/{role}")
  public void addRole(@PathVariable String username, @PathVariable String role) {
    kcUserRoleService.addRoles(username, List.of(role));
  }

  @PermitAll
  @Operation(description = "Remove a role from a user.")
  @Delete("/{role}")
  public void removeRole(@PathVariable String username, @PathVariable String role) {
    kcUserRoleService.removeRole(username, role);
  }

}
