package com.hexploits.kc.service.scheduler.email;

import com.hexploits.kc.model.KcCount;
import com.hexploits.kc.service.analytics.KcEventAnalyticsService;
import com.hexploits.kc.service.analytics.KcLoginAnalyticsService;
import com.hexploits.kc.service.analytics.KcUserRegistrationAnalyticsService;
import com.hexploits.kc.service.email.IEmailStrategy;
import io.micronaut.scheduling.annotation.Scheduled;
import jakarta.inject.Singleton;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Singleton
public class EmailScheduler {

  private final Logger log = LoggerFactory.getLogger(EmailScheduler.class);
  private final KcUserRegistrationAnalyticsService kcUserRegistrationAnalyticsService;
  private final KcLoginAnalyticsService kcLoginAnalyticsService;
  private final KcEventAnalyticsService kcEventAnalyticsService;
  private final IEmailStrategy emailStrategy;

  public EmailScheduler(KcUserRegistrationAnalyticsService kcUserRegistrationAnalyticsService,
    KcLoginAnalyticsService kcLoginAnalyticsService, KcEventAnalyticsService kcEventAnalyticsService,
    IEmailStrategy emailStrategy) {
    this.kcUserRegistrationAnalyticsService = kcUserRegistrationAnalyticsService;
    this.kcLoginAnalyticsService = kcLoginAnalyticsService;
    this.kcEventAnalyticsService = kcEventAnalyticsService;
    this.emailStrategy = emailStrategy;
  }

  @Scheduled(cron = "0 0 * * *")
  public void sendEndOfDayEmail() {
    Long registrationsToday = kcUserRegistrationAnalyticsService.fetchRegistrationsToday();
    KcCount totalRegisteredUsers = kcUserRegistrationAnalyticsService.fetchUserRegistrationCount();
    KcCount loginLogCount = kcLoginAnalyticsService.fetchLoginCount();
    KcCount eventLogCount = kcEventAnalyticsService.fetchEventCount();

    emailStrategy.sendEndOfDayEmail(
      registrationsToday,
      totalRegisteredUsers.getAllTime(),
      loginLogCount.getAllTime(),
      eventLogCount.getAllTime()
    );
  }
}
