package com.hexploits.kc.service;

import jakarta.inject.Singleton;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Singleton
public class InternalResourceLoader {

  private final Logger log = LoggerFactory.getLogger(InternalResourceLoader.class);

  public String fetchWelcomeSubject() {
    try {
      return fetchResource("/email/welcome/subject.txt");
    } catch (IOException e) {
      log.error("Failed to find welcome email subject");
      throw new IllegalStateException("Failed to find welcome email subject.");
    }
  }

  public String fetchWelcomeBody() {
    try {
      return fetchResource("/email/welcome/body.html");
    } catch (IOException e) {
      log.error("Failed to find welcome email body");
      throw new IllegalStateException("Failed to find welcome email body.");
    }
  }

  public String fetchPasswordResetSubject() {
    try {
      return fetchResource("/email/password-reset/subject.txt");
    } catch (IOException e) {
      log.error("Failed to find password reset subject");
      throw new IllegalStateException("Failed to find password reset subject.");
    }
  }

  public String fetchPasswordResetBody() {
    try {
      return fetchResource("/email/password-reset/body.html");
    } catch (IOException e) {
      log.error("Failed to find password reset email body");
      throw new IllegalStateException("Failed to find password reset email body.");
    }
  }

  private String fetchResource(String path) throws IOException {
    InputStream inputStream = InternalResourceLoader.class.getResourceAsStream(path);

    if (inputStream == null) {
      log.error("Failed to find resource: {}", path);
      throw new IllegalStateException("Failed to find subject template.");
    }

    return new String(inputStream.readAllBytes(), StandardCharsets.UTF_8);
  }

}
