package com.hexploits.kc.service.event.internal;

import com.hexploits.kc.service.KcEventLogService;
import com.hexploits.kc.service.event.external.IKcEventBrokerStrategy;
import com.hexploits.kc.service.webhook.IWebhookDispatchStrategy;
import io.micronaut.context.event.ApplicationEventListener;
import jakarta.inject.Singleton;
import reactor.util.annotation.NonNull;

@Singleton
public class KcCommandListener implements ApplicationEventListener<KcCommandEvent> {

  private final IKcEventBrokerStrategy kcEventBrokerStrategy;
  private final IWebhookDispatchStrategy webhookDispatchService;
  private final KcEventLogService kcEventLogService;

  public KcCommandListener(IKcEventBrokerStrategy kcEventBrokerStrategy,
    IWebhookDispatchStrategy webhookDispatchService, KcEventLogService kcEventLogService) {
    this.kcEventBrokerStrategy = kcEventBrokerStrategy;
    this.webhookDispatchService = webhookDispatchService;
    this.kcEventLogService = kcEventLogService;
  }

  @Override
  public void onApplicationEvent(@NonNull KcCommandEvent event) {
    webhookDispatchService.emit(
      event.getKcUser().getUid(),
      event.getKcUser().getUsername(),
      event.getKcUser().getExternalReference(),
      event.getEventType()
    );
    
    kcEventLogService.writeLog(event.getKcUser().getUid(), event.getEventType(), event.getMetadata());
    kcEventBrokerStrategy.emit(event.getEventType().getTopic(), event.getKcUser().getUid(), event);
  }
}
