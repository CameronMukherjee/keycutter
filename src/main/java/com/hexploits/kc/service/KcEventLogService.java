package com.hexploits.kc.service;

import com.hexploits.kc.dto.internal.EventType;
import com.hexploits.kc.model.KcEventLog;
import com.hexploits.kc.repository.KcEventLogRepository;
import io.micronaut.context.annotation.Value;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.transaction.annotation.ReadOnly;
import jakarta.inject.Singleton;
import java.util.List;
import java.util.Optional;
import java.util.UUID;
import javax.transaction.Transactional;

@Singleton
public class KcEventLogService {

  private final KcEventLogRepository kcEventLogRepository;
  private final String env;

  public KcEventLogService(
    @Value("${kc.env:UNKNOWN}") String env,
    KcEventLogRepository kcEventLogRepository) {
    this.env = env;
    this.kcEventLogRepository = kcEventLogRepository;
  }

  @ReadOnly
  public List<KcEventLog> fetchLogs(Optional<Integer> limit) {
    return kcEventLogRepository.fetchLogs(limit.orElse(10));
  }

  @ReadOnly
  public List<KcEventLog> fetchLogs(String username, Optional<Integer> limit) {
    return kcEventLogRepository.fetchLogs(username, limit.orElse(10));
  }

  @Transactional
  public void writeLog(UUID userUid, EventType eventType, @Nullable Optional<String> metadata) {
    kcEventLogRepository.writeLog(UUID.randomUUID(), userUid, eventType, metadata.orElse(null), env);
  }
}
