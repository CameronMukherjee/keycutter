package com.hexploits.kc.service;

import com.hexploits.kc.dto.response.LoginLogResponse;
import com.hexploits.kc.model.KcLoginLog;
import com.hexploits.kc.model.LoginResult;
import com.hexploits.kc.repository.KcLoginLogRepository;
import io.micronaut.transaction.annotation.ReadOnly;
import jakarta.inject.Singleton;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;
import javax.transaction.Transactional;

@Singleton
public class KcLoginLogService {

  private final KcLoginLogRepository kcLoginLogRepository;

  public KcLoginLogService(KcLoginLogRepository kcLoginLogRepository) {
    this.kcLoginLogRepository = kcLoginLogRepository;
  }

  @ReadOnly
  public List<LoginLogResponse> fetchLogs(Optional<Integer> limit) {
    return kcLoginLogRepository.fetchLogs(limit.orElse(10));
  }

  @ReadOnly
  public List<LoginLogResponse> fetchLogs(String username, Optional<Integer> limit) {
    return kcLoginLogRepository.fetchLogs(username, limit.orElse(10));
  }

  @Transactional
  public void writeLog(String username, LoginResult result) {
    KcLoginLog log = new KcLoginLog(UUID.randomUUID(), username, result, OffsetDateTime.now());
    kcLoginLogRepository.saveLog(log);
  }
}
